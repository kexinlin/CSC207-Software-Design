@startuml

title __CONTROLLER's Class Diagram__\n

  package controller {
    class ATM {
        - billAmount : HashMap<Cash, Integer>
        - atmRecordFileName : String
        - alertFileName : String
        + ATM()
        + getAlertFileName()
        + setAlertFileName()
        + getAtmRecordFileName()
        + getBankSystem()
        + setBankSystem()
        + setAtmRecordFileName()
        + setCashController()
        + getCashController()
        + getDepositController()
        + setDepositController()
        + getWithdrawController()
        + setWithdrawController()
        + getBillAmount()
        + login()
        + logout()
        + deductCash()
        + stockCash()
        + checkIfAbleToWithdraw()
        + currentLoggedIn()
        + getChequeController()
        + close()
    }
  }
  

  package controller {
    class ATMRecordController {
        ~ ATMRecordController()
        + getRecordFile()
        + readRecords()
        + writeRecords()
    }
  }
  

  package controller {
    class AccountFactory {
        + getAccount()
        + getAccountType()
    }
  }
  

  package controller {
    class AlertController {
        ~ AlertController()
        + getRecordFile()
        + atmNeedReplenishment()
        + sendAlert()
    }
  }
  

  package controller {
    class BankSystem {
        - currentTime : Date
        - loginables : HashMap<String, Loginable>
        - accounts : HashMap<String, Account>
        - recordFileName : String
        - requests : ArrayList<Request>
        - transactions : ArrayList<Transaction>
        - messages : ArrayList<Message>
        {static} - NUMBERS : String
        {static} - rnd : SecureRandom
        + BankSystem()
        + close()
        + getCurrentTime()
        + setCurrentTime()
        + getCurrentTimeStr()
        + getLoginable()
        + getLoginables()
        + getAccounts()
        + getTransactions()
        + createUser()
        - randomString()
        + getRequests()
        + processRequest()
        + createAccount()
        + undoTransaction()
        - undoTransfer()
        - undoWithdraw()
        - undoDeposit()
        + transferMoney()
        + getAccountById()
        + addAccount()
        + addTransaction()
        + addLoginable()
        + setBillController()
        + getBillController()
        + payBill()
        + getRecordFileName()
        + setRecordFileName()
        + addRequest()
        + getMessages()
        + addMessage()
        + removeMessage()
    }
  }
  

  package controller {
    class CashFactory {
        + getCash()
    }
  }
  

  package controller {
    class Main {
        {static} + main()
    }
  }
  

  package controller {
    class RecordController {
        + RecordController()
        - getRecordFile()
        + readRecords()
        - processSetting()
        - processMessage()
        - processRequest()
        - processTx()
        - processDepositWithdraw()
        - processPayBill()
        - processTransfer()
        - processAccount()
        - processManager()
        - processUser()
        + writeRecords()
        - recordPrimaryAcc()
        - recordMessage()
        - recordRequest()
        - recordAccount()
        - recordUser()
        - recordManager()
        - recordTransaction()
    }
  }
  

  ATM o-- BankSystem : bankSystem
  ATM o-- Loginable : loggedIn
  ATM o-- CashController : cashController
  ATM o-- ChequeController : chequeController
  ATM o-- DepositController : depositController
  ATM o-- WithdrawController : withdrawController
  ATM o-- ATMRecordController : atmRecordController
  ATM o-- AlertController : alertController
  ATMRecordController o-- ATM : atm
  ATMRecordController o-- CashFactory : cashFactory
  AlertController o-- BankSystem : bankSystem
  AlertController o-- ATM : atm
  BankSystem o-- BillController : billController
  BankSystem o-- RecordController : recordController
  BankSystem o-- AccountFactory : accountFactory
  RecordController o-- BankSystem : bankSystem
  RecordController o-- AccountFactory : accountFactory


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
